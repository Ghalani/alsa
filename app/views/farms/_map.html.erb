function clearShape(){
    if (Boolean(shape)){
      shape.setMap(null);
      vueModel.farm.points = [];
    }
  }
  function clearMarker(){
    if (Boolean(marker)){
      marker.setMap(null);
      //vueModel.farm.points = [];
    }
  }

  function createEditablePolygon(shapeArray){
    shape = new google.maps.Polygon({
      map: map,
      paths: shapeArray,
      strokeColor: '#0000FF',
      strokeOpacity: 0.8,
      strokeWeight: 2,
      fillColor: '#0000FF',
      fillOpacity: 0.35,
      editable: true
    });

    google.maps.event.addListener(shape.getPath(), "insert_at",  function(event) {
          updateCoords();
        });
        google.maps.event.addListener(shape.getPath(), "set_at",  function(event) {
          updateCoords();
        }); 
  }

  function createPolygon(shapeArray){
    new google.maps.Polygon({
      map: map,
      paths: shapeArray,
      strokeColor: '#00FF00',
      strokeOpacity: 0.8,
      strokeWeight: 2,
      fillColor: '#00FF00',
      fillOpacity: 0.35
    });
  }

  function initMap() {
    // Create a map object and specify the DOM element for display.
    map = new google.maps.Map(document.getElementById('map'), {
      center: coord,
      scrollwheel: true,
      zoom: zoom
    });

    google.maps.event.addListener(map, 'click', function(event){
      this.setOptions({scrollwheel:true});
    });

    var drawingManager = new google.maps.drawing.DrawingManager({        
      drawingMode: google.maps.drawing.OverlayType.MARKER,
      drawingControl: true,
      drawingControlOptions: {
        position: google.maps.ControlPosition.TOP_CENTER,
        drawingModes: ['marker', 'polygon']
      },
      polygonOptions: {
        editable: true
      },
      markerOptions: {icon: 'https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png'},
    });
    drawingManager.setMap(map);

    google.maps.event.addListener(drawingManager, 'overlaycomplete', function(event) {
      if (event.type == 'marker') {
        clearMarker();
        marker = event.overlay;
        vueModel.farm.lat = marker.position.lat();
        vueModel.farm.lng = marker.position.lng();
      }else if (event.type == 'polygon'){
        //console.log(event.overlay.getPath().getArray());
        clearShape();
        shape = event.overlay;
        updateCoords();
        google.maps.event.addListener(shape.getPath(), "insert_at",  function(event) {
          updateCoords();
        });
        google.maps.event.addListener(shape.getPath(), "set_at",  function(event) {
          updateCoords();
        });   
      }
    });  
        
    //google.maps.event.addListener(drawingManager, 'overlaystart', function(event) {  console.log(event); });
    
  }
  
  function updateCoords(){
    vueModel.farm.points = shape.getPath().getArray().map(function(obj){
      return {
        lat: obj.lat(),
        lng: obj.lng()
      };
    });
  }
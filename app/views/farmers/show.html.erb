<div id="farmer-show" >
	<%= render "static_pages/nav" %>
  <div class="stat-bar green-bg ui grid">
    <div class="four wide column row">
      <div class="four wide column">
        <%= image_tag @farmer.image.url(:thumb), class:"circle" %>
      </div>
      <div class="twelve wide column">
        <div class="text15">{{farmer.fname}} {{farmer.lname}}</div>
        <div class="text1">{{farmer.phone}}</div>
        <!--<div>Village name</div>       -->
        <div @click.prevent="toggleEditModal()" class="ui button green-bg"><i class="ui write icon"></i> Edit</div>
      </div>
    </div>
    <div class="twelve wide column">
      <div id="farmer-card" class="overlap card raise-1 text12 dark-text1">        
        <div class="card-menu-tr text15" v-on:click="showDeleteModal();"><i class="trash icon"></i></div>
        <div id="farmer-holder">
          <div class="ui top attached tabular menu">
            <div id="item1" class="active item">Info</div>
            <div id="item2" class="item">Farms</div>
          </div><hr>
          <div id="item1-panel" class="ui bottom attached active tab">
            Information
            <p></p>
            <p></p>
          </div>
          <div id="item2-panel" class="ui bottom attached tab">
            Farms
            <br>
            <div v-if="farms.length < 1">This farmer has no farm</div>
            <div class="w200" v-for="farm in farms">   
              <a v-bind:href="'/organizations/<%= @organization.id %>/farms/' + farm.id" class="card raise-1" >        
                <div>{{farm.name}}</div>
                <div>{{farm.size}} Acres</div>
              </a>
            </div>
            <div id="new-farmer-but" class="fab fab-br raise-3 ripple" v-on:click="hideFabShowNewFarm">
              <i class="ui add icon"></i>
            </div>
          </div>
        </div>
        <div id="new-farm-modal" class="ui small modal pad1">
          <div id="farm-new">
            <h3>New Farm</h3>
            <hr>  
            <div class="form-group w100p-rounded"  >
              <label>Name</label><br>
              <input type="text" v-model="newFarm.name" >
            </div>
            <div class="form-group w100p-rounded">
              <label>Size (in Acres)</label> <br>        
              <input type="text" v-model="newFarm.size" >
            </div>
            <div class="form-group"></div>
            <button v-on:click="createNewFarm" class="button" >Submit</button>
          </div>
        </div>
    </div>
  </div>
  <div id="farmer-delete" class="ui small modal">
    <div class="content">
      <p>Are you sure you want to delete this farmer?</p>
      <p><h1>All farms under this farmer <strong>(and data)</strong> will be deleted</h1></p>
    </div>
    <div class="actions">
      <div class="ui green-bg button" v-on:click="deleteFarmer()" >Yes</div>
      <div class="ui red-bg button" v-on:click="showDeleteModal()">No</div>
    </div>
    <p></p>
  </div>
</div>

<div id="edit_form" class="ui small modal">
  <div class="content">
    <h3>Edit Farmer</h3>
    <div>
      <div class="form-group w100p-rounded">
        <label for="">First name</label>
        <input type="text" v-model="farmerCopy.fname">
      </div>
      <div class="form-group w100p-rounded">
        <label for="">First name</label>
        <input type="text" v-model="farmerCopy.lname">
      </div>
      <div class="form-group w100p-rounded">        
        <label for="">Phone</label>
        <input type="text" v-model="farmerCopy.phone">
      </div>
      <div class="form-group">
        <label>Gender</label><br>
        <%= radio_button_tag :gender, :female, "v-model":"farmerCopy.gender", required: true %> 
        <label>Female</label>
        <%= radio_button_tag :gender, :male, "v-model":"farmerCopy.gender", required: true %> 
        <label>Male</label>
      </div>
      <div class="form-group w100p-rounded">
        <label>Hightest education</label><br>
        <select name="" id="" v-model="farmerCopy.educational_level">
          <% Farmer.educational_levels.keys.to_a.map do |w| %>
            <option value="<%= w %>"><%= w.humanize %></option>
          <% end %>
        </select>        
      </div>
    </div>
  </div>
  <div class="actions">
    <div class="ui button green-bg" v-on:click="updateFarmer()">Update</div>
    <div class="ui button cancel">Cancel</div>
  </div>
</div>

<script type="text/javascript" >
  var farmerShow = new Vue({
    el: "#farmer-show",
    data: {
      farmer: <%= @farmer.to_json.html_safe %>,
      farmerCopy: <%= @farmer.to_json.html_safe %>,
      newFarm: {
        farmer_id: <%= @farmer.id %>,
        name: "",
        size: 0
      },
      farms: []
    },
    methods: {
      getFarms: function(){
        var that = this;
        $.ajax({
          url: '/organizations/<%= @organization.id %>/farms.json?farmer_id=<%= @farmer.id %>',
          success: function(res){
            that.farms = res;
            //that.filteredFarms = res
          }
        })
      },
      createNewFarm: function(){
        var that = this;
        $.ajax({
          url: '/organizations/<%= @organization.id %>/farms.json',
          data: {farm: that.newFarm},
          method: "POST",
          success: function(res){
            that.farms.push(res)
            that.hideFabShowNewFarm();
          }, 
          error: function(err){ 
            farmNew.error = err.message;
            console.log(err.message);
          }
        });
      },
      hideFabShowNewFarm: function(){
        $('#new-farm-modal').modal('toggle');        
      },
      toggleEditModal: function(){
        $('#edit_form.modal').modal("toggle");
      },
      showDeleteModal: function(){
        $('#farmer-delete.modal').modal('toggle');
      },
      deleteFarmer: function(){
        $.ajax({
          url: '/organizations/<%= @organization.id %>/farmers/<%= @farmer.id %>.json',
          method: "DELETE",
          success: function(res){
            if(Boolean(document.referrer)){
              window.location = document.referrer;
            }else{
              window.history.back();
            }
          }, 
          error: function(err){ console.log(err.message)}
        });
      },
      updateFarmer: function(){
        var that = this;
        $.ajax({
          url: '/organizations/<%= @organization.id %>/farmers/<%= @farmer.id %>.json',
          data: {farmer: this.farmerCopy},
          method: "PUT",
          success: function(res){
            that.farmer = that.farmerCopy;
            that.toggleEditModal();
          }, 
          error: function(err){ console.log(err.message)}
        });
      },
    }
  });
  farmerShow.getFarms();

  $('.item').on('click', function(){
    $('.item').each(function(){
      $(this).removeClass('active');
      $("#"+$(this).attr('id')+"-panel").removeClass('active');      
    });

    $(this).addClass('active');
    $("#"+$(this).attr('id')+"-panel").addClass('active');

  });
</script>

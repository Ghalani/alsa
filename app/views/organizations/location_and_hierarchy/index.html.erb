<div id="location_hierarchy">
  <%= render "static_pages/nav" %>
  <div class="green-bg pad1 padb3">
    <h3>Location and Hierarchy</h3>
  </div><br>
  <div class="card raise-1 w90p hcenter neg-marg-top3">
    <div class="ui grid pad-tb1">
      <div class="six wide column">
        <h4>Location hierarchy</h4>
        <hr>
        <div>
          <!-- the demo root element -->
          <ul id="demo">
            <item
              class="item"
              :model="treeData">
            </item>
          </ul>
        </div>
        <div class="ui button">
          Add level
        </div>
      </div>
      <div class="ten wide column grey-border1">
        <h4>Locations</h4>
      </div>
    </div>
  </div>
</div>
<script type="text/x-template" id="item-template">
  <li>
    <div
      class="list-item" 
      :class="{bold: isFolder}"
      @click="toggle"
      @dblclick="changeType">
      {{model.name}}
      <span v-if="isFolder">[{{open ? '-' : '+'}}]</span>
    </div>
    <ul v-show="open" v-if="isFolder">
      <item
        class="item"
        v-for="model in model.children"
        :model="model">
      </item>
      <li class="add" @click="addChild">+</li>
    </ul>
  </li>
</script>
<script>
  // demo data
  var data = {
    name: 'My Tree',
    children: [
      { name: 'hello' },
      { name: 'wat' },
      {
        name: 'child folder',
        children: [
          {
            name: 'child folder',
            children: [
              { name: 'hello' },
              { name: 'wat' }
            ]
          },
          { name: 'hello' },
          { name: 'wat' },
          {
            name: 'child folder',
            children: [
              { name: 'hello' },
              { name: 'wat' }
            ]
          }
        ]
      }
    ]
  }

  // define the item component
  Vue.component('item', {
    template: '#item-template',
    props: {
      model: Object
    },
    data: function () {
      return {
        open: false
      }
    },
    computed: {
      isFolder: function () {
        return this.model.children &&
          this.model.children.length
      }
    },
    methods: {
      toggle: function () {
        if (this.isFolder) {
          this.open = !this.open
        }
      },
      changeType: function () {
        if (!this.isFolder) {
          Vue.set(this.model, 'children', [])
          this.addChild()
          this.open = true
        }
      },
      addChild: function () {
        this.model.children.push({
          name: 'new stuff'
        })
      }
    }
  })

  var labourHierarchy = new Vue({
    el: "#location_hierarchy",
    data: {
      locationTypes: [],
      treeData: data,
    },
    methods: {
      getLocationTypes: function(){

      },
    }
  })
</script>
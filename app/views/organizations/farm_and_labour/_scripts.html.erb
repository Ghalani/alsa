<script type="text/x-template" id="table-farmer">
	<table class="ui selectable table">
	  <thead>
	    <tr>
	    	<th>Name</th>
		    <th>Phone</th>
		    <th>Gender</th>
		  </tr>
	  </thead>
	  <tbody>
			<tr v-for="farmer in farmers">
			  <td>
			  	<a :href="'/organizations/'+ farmer.organization.id +'/farmers/' + farmer.id">{{farmer.fname}} {{farmer.lname}}</a> <i class="ui eye icon float-right ghost" @click.prevent="requestSetFarmerInfo(farmer)"></i>
			  </td>
			  <td>{{farmer.phone}}</td>
			  <td>{{farmer.gender}}</td>
			</tr>
		</tbody>
	</table>
</script>

<script type="text/x-template" id="table-labourer">
	<table class="ui selectable table">
	  <thead>
	    <tr>
	    	<th>Name</th>
		    <th>Phone</th>
		    <th>Gender</th>
		  </tr>
	  </thead>
	  <tbody>
			<tr v-for="labourer in labourers">
			  <td>
			  	<a :href="'/organizations/'+ labourer.organization.id +'/labourers/' + labourer.id">{{labourer.fname}} {{labourer.lname}}</a> <i class="ui eye icon float-right" @click.prevent="requestSetLabourerInfo(labourer)"></i>
			  </td>
			  <td>{{labourer.phone}}</td>
			  <td>{{labourer.gender}}</td>
			</tr>
		</tbody>
	</table>
</script>

<script type="text/x-template" id="table-farm">
	<table class="ui selectable table">
	  <thead>
	    <tr>
	    	<th>Name</th>
		    <th>Size</th>
		  </tr>
	  </thead>
	  <tbody>
			<tr v-for="farm in farms">
			  <td>
			  	<a :href="'/organizations/'+ farm.organization.id +'/farms/' + farm.id">{{farm.name}}</a> <i class="ui eye icon float-right" @click.prevent="requestSetFarmInfo(farm)"></i>
			  </td>
			  <td>{{farm.size}}</td>
			</tr>
		</tbody>
	</table>
</script>
 
<script>
		Vue.component('table-farmer', {
		  props: ['farmers'],
		  template: '#table-farmer',
		  methods:{
	      requestSetFarmerInfo(farmer) {
	      	this.$parent.setFarmerInfo(farmer);
	      }
	    } 
		});
		Vue.component('table-labourer', {
		  props: ['labourers'],
		  template: '#table-labourer',
		  methods:{
	      requestSetLabourerInfo(labourer) {
	      	this.$parent.setLabourerInfo(labourer);
	      }
	    } 
		});
		Vue.component('table-farm', {
		  props: ['farms'],
		  template: '#table-farm',
		  methods:{
	      requestSetFarmInfo(farm) {
	      	this.$parent.setFarmInfo(farm);
	      }
	    } 
		});

		var farmLabour = new Vue({
			el: '#farm-labour',
			data: {
				searchKeys: ["name","phone","gender"],
				searchBy: "",
				farmers: [],
				filteredFarmers: [],
				labourers: [],
				filteredLabourers: [],
				farms: [],
				filteredFarms: [],
				farmerInfo: {
					image_url:{}
				},
				labourerInfo: {
					image_url:{}
				},
				farmInfo: {}
			},
			methods: {
				getFarmers: function(){
					var that = this;
					$.ajax({
		  			url: '/organizations/<%= @organization.id %>/farmers.json',
		  			success: function(res){
		  				that.farmers = res
		  				that.filteredFarmers = res
		  			}
		  		})
				},
				getLabourers: function(){
					var that = this;
					$.ajax({
		  			url: '/organizations/<%= @organization.id %>/labourers.json',
		  			success: function(res){
		  				that.labourers = res
		  				that.filteredLabourers = res
		  			}
		  		})
				},
				getFarms: function(){
					var that = this;
					$.ajax({
		  			url: '/organizations/<%= @organization.id %>/farms.json',
		  			success: function(res){
		  				that.farms = res
		  				that.filteredFarms = res
		  			}
		  		})
				},
				setFarmerInfo: function(farmer){
					this.farmerInfo = farmer;
					$('#farmer-info-modal.modal').modal('show');
				},
				setLabourerInfo: function(labourer){
					this.labourerInfo = labourer;
					$('#labourer-info-modal.modal').modal('show');
				},
				setFarmInfo: function(farm){
					this.farmInfo = farm;
					$('#farm-info-modal.modal').modal('show');
				},
				farmerFilter: function () {
					var text = $('#farmer-filter2').val().toLowerCase();
					var searchBy = this.searchBy;
					if(Boolean(text)){
						this.filteredFarmers = this.farmers.filter(function (farmer) {
							if(searchBy == "name"){
								return (farmer.fname.toLowerCase().indexOf(text) > -1) || (farmer.lname.toLowerCase().indexOf(text) > -1);
							}else if(searchBy == "phone"){
								return (farmer.phone.indexOf(text) > -1);
							}else if(searchBy == "gender"){
								return (farmer.gender.indexOf(text) > -1);		
							}else{
								return (farmer.fname.toLowerCase().indexOf(text) > -1) || (farmer.lname.toLowerCase().indexOf(text) > -1) 
								|| (farmer.gender.indexOf(text) > -1)	|| (farmer.phone.indexOf(text) > -1);
							}														
						});
					}else{
						this.filteredFarmers = this.farmers
					}
				}
			}
		});		

		$('.menu-item').on('click', function(){
			$('.menu-item').each(function(){
				$(this).removeClass('active');
				$("#"+$(this).attr('name')+"-panel").removeClass('active');      
			});

			$(this).addClass('active');
			$("#"+$(this).attr('name')+"-panel").addClass('active');
		});

	$(document).ready(function(){
		console.log("lOADED!");
		farmLabour.getFarmers();
		farmLabour.getLabourers();
		farmLabour.getFarms();
	});
	
</script>